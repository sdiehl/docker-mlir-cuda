name: Docker Image CI (ARM64)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-24.04-arm64
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            cuda: false
            mlir: 20
            base_image: ubuntu:24.04
            image_suffix: mlir20-ubuntu24.04-arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ matrix.image_suffix }},enable=${{ github.event_name != 'pull_request' }}
          type=raw,value=latest-${{ matrix.image_suffix }},enable=${{ github.event_name != 'pull_request' }}
          type=sha,format=short,enable=${{ github.event_name != 'pull_request' }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BASE_IMAGE=${{ matrix.base_image }}
          MLIR_VERSION=${{ matrix.mlir }}
          CUDA_ENABLED=${{ matrix.cuda }}
        cache-from: |
          type=gha
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache-${{ matrix.image_suffix }}
        cache-to: |
          type=gha,mode=max
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache-${{ matrix.image_suffix }},mode=max 